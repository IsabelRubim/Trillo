// Componentes não reutilizaveis

/////////////////////////////////////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}


/////////////////////////////////////////
// SEARCH
.search {
    flex: 0 0 40%; // 40% da largura do cabeçalho (header)

    display: flex; // Com isso, os elementos de pesquisa irá ficar centralizado ao elemento pai.
    align-items: center;
    justify-content: center;

    // Quinto breakpoint
    @media only screen and (max-width: $bp-smallest) {
        order: 1; // Vai para o final, porque todas as ordens estão definida como zero
        flex: 0 0 100%; // Isso faz com que a barra de pesquisa mova para uma nova linha. Prop. flex-wrap definida no header.
        background-color: var(--color-grey-light-2);
    }

    &__input {
        font-family: inherit;
        font-size: inherit; // Herda o tamanho da fonte do header (elemento pai) que é 140px.
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem; // O botão moverá para barra de pesquisa. 

        // Ao clicar na barra de pesquisa ela vai se expandir para 100%
        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        // Muda a cor do texto na barra de pesquisa e o tamanho
        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    // Colocar o botão de pesquisa e a barra da mesma cor, como eles são irmãos, iremos usar o seletor para aplicar o focus
    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }
        // Ao clicar no botão de pesquisa, irá subir.
        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); // Muda a cor do ícone svg da lupa.
    }
}


/////////////////////////////////////////
// USER NAVIGATION
.user-nav {
    align-self: stretch; // Alonga os itens verticalmente 

    display: flex;
    align-items: center;

    position: relative; // Para o chat

    // Seleciona os filhos diretos (icon-box e user), logo não precisamos criar um bloco para essas classes definidas no HTML
    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%; // Com isso ao passar o mouse o hover será aplicado ao todo.
        display: flex;
        align-items: center; // Centraliza verticalmente!
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative; // Elemento pai da notificação
    }

    &__message-icon:hover .chat {
        visibility: visible;
        opacity: 1;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2); // Cor do ícone svg
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute; // Em relação ao elemento pai. 
        top: 1.5rem;
        right: 1.1rem;

        // Isso alinha o texto da notificação ao logo do eixo x e y
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

/////////////////////////////////////////
// CHAT 
.chat {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    top: 100%;
    right: -12.3rem;
    width: 40rem;
    z-index: 88;
    font-size: 1.2rem;
    background-color: #fff;
    transition: all .2s .1s;

    &__list {
        list-style: none;
        display: flex;
        flex-direction: column;
    }

    &__item {
        display: flex;
        align-items: center;
        padding: 1.2rem 1.5rem;
        justify-content: space-between;
        border-bottom: 1px solid var(--color-grey-light-2);
        transition: all .2s;
        
        &:hover:not(:last-child) {
            background-color: var(--color-grey-light-1);
        }
    }

    &__photo {
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        box-sizing: content-box;
        border: 3px solid var(--color-primary);
        transition: all .2s;

        &:hover {
            border: 3px solid var(--color-grey-dark-2);
        }
        
    }

    &__box {
        //display: flex;
        //flex-direction: column;
    }

    &__info {
        display: flex;
        align-items: center;
        margin-bottom: 0.2rem;
    }

    &__user-name {
        font-weight: 600;
    }

    &__timestamp {
        font-size: 1rem;
        color: var(--color-primary-dark);
        margin-left: auto;
    }

    &__preview {
        font-size: 1.18rem;
    }

    &__btn {
        align-self: center;
    }

}

/////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    // Terceiro breakpoint
    @media only screen and (max-width: $bp-medium) {
        display: flex;
        margin: 0;
    }

    &__item {
        position: relative;

        // Todos os itens (texto e icons) terão espaço, exceto o último. 
        &:not(:last-child) {
            margin-bottom: .5rem;

            // Terceiro breakpoint
            @media only screen and (max-width: $bp-medium) {
                margin: 0;
            }
        }

        // Terceiro breakpoint
        @media only screen and (max-width: $bp-medium) {
            flex: 1; // Isso faz com que os itens da lista ocupem toda a largura disponivel em 900px
        }
    }

    // Efeito rosa ao passar o mouse nos itens
    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0); // Isso irá fazer crescer o pseudo elemento em direição ao eixo y.
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s, // Isso irá esperar o delay da largura e causará o efeito da largura 100% ao item começando lento e acelerando no final
                    background-color .1s; // Anima muito rapido o efeito brilhante definito no active.
    }

    &__item:hover::before,
    &__item--active::before { // Deixa o modificador em estado selecionado
        transform: scaleY(1); // Isso irá fazer crescer o pseudo elemento em direição ao eixo y ao passar o mouse
        width: 100%;
    }

    //Efeito brilhante ao clicar no item
    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative; // Para usar o z-index
        z-index: 10; // Coloca os itens acima do efeito rosa

        //Alinha os textos e os ícones
        display: flex;
        align-items: center;

        // Terceiro breakpoint
        @media only screen and (max-width: $bp-medium) {
            justify-content: center; // Centralizar os itens na lista
            padding: 2rem;
        }

        // Quarto breakpoint
        @media only screen and (max-width: $bp-small) {
            flex-direction: column;
            padding: 1.5rem .5rem;
        }
    }

    &__icon {
        width: 1.75rem; // Largura dos icones svg da barra
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor; // Cor do elemento pai ou do elemento atual.

        // Quarto breakpoint
        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}

/////////////////////////////////////////
// LEGAL TEXT - Texto abaixo da nav lateral
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    // Terceiro breakpoint
    @media only screen and (max-width: $bp-medium) {
        display: none;
    }
}

/////////////////////////////////////////
// GALLERY
.gallery {
    display: flex;

     &__photo {
         width: 100%; // Ocupa a largura total do hotel view.
         display: block; // Isso remove os pequenos espaços em brancos em volta da img
     }
}

/////////////////////////////////////////
// HOTEL OVERVIEW
.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line); 

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        // Quarto breakpoint
        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }
    }

    &__stars {
        //flex: 1; isso faz com que o elemento ocupa todo espaço disponivel, usando margin-right isto não acontece, é o melhor truque,
        margin-right: auto; // Isso deixa o elemento ocupando apenas o espaço que ele precisa!
        display: flex; // Elementos svg são inline, tornando eles flex tira este padão e alinha melhor os elementos
    }

    &__icon-star,
    &__icon-location {
        height: 1.75rem;
        width: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem;
        align-self: stretch;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        // Quarto breakpoint
        @media only screen and (max-width: $bp-small) {
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300; 
        margin-bottom: -3px;

        // Quarto breakpoint
        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        // Quarto breakpoint
        @media only screen and (max-width: $bp-small) {
            font-size: .5rem;
        }
    }
}

/////////////////////////////////////////
// BUTTON
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit; 
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px; // Para a seta so segundo botão "show all"
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0, 0, 0, .25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

/////////////////////////////////////////
// PARAGRAPH
.paragraph:not(:last-of-type) { // Apenas seletores do TIPO pararagrafo que isto aplica
    margin-bottom: 2rem;
}


/////////////////////////////////////////
// LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;

    &__item {
        flex: 0 0 50%; // Metade da largura, isso faz com que os itens da lista fiquem lado a lado.
        margin-bottom: .7rem;
    }

    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        //Older browsers
        background-image: url(../img/chevron-thin-right.svg);  //Adiciona icone svg atavés do CSS
        background-size: cover;

        //Para navegadores mais novos usa-se MASCARAS
        @supports (-webkit-mask-image: url()) or (mask-image: url()) {
            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg);
            -webkit-mask-size: cover; // Isso faz com que a cor se aplica totalmente ao icone svg acima.
            mask-image: url(../img/chevron-thin-right.svg);
            mask-size: cover;
            background-image: none; // Com isso deixa mantém a cor do ícone nos navegadores que suportam a mascaras
        }
    }
}


/////////////////////////////////////////
// RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &__count {
        margin-right: auto;
    }

    &__friends {
        display: flex;
    }

    &__photo {
        box-sizing: content-box;
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;

        &:not(:last-child) {
            margin-right: -2rem;
        }
    }
}

/////////////////////////////////////////
// REVIEWS
.review {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative; // Para o pseudoelemento ::before
    overflow: hidden; // Para o pseudoelemento não transborda a caixa.

    // Terceiro breakpoint
    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        position: relative; // Devemos coloca position aqui por conta do z index que só funciona com uma posição definida.
        z-index: 10;
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
        margin-right: auto;
    }

    &__user-name {
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        font-size: 2.2rem;
        font-weight: 300;
        color: var(--color-primary);
    }

    &::before {
        content: "\201C"; // Símbolo de aspas.
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1; // Está herdando do navegador, logo temos que definir como 1.
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif; // Herdando do navegador, devemos tirar as serifas.
        z-index: 1; // Para não ultrapassar o texto.
    }
}

/////////////////////////////////////////
// CALL TO ACTION
.cta {
    padding: 3.5rem;
    text-align: center;

    // Terceiro breakpoint
    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
    }

    // h2 
    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}

/////////////////////////////////////////
// CALL TO ACTION - BOTÃO
.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #fff;
    position: relative; // Para o posicionamento invisivel do botão
    overflow: hidden; // Para o botão não transborda fora do seu espaço.
    cursor: pointer;

    // Seleciona todos os elementos filhos, códigos repetidos que se aplica a eles, podem ir nesse bloco.
    & > * {
        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7.5rem; // O preenchimento que vai definir o tamanho do botão.     
    }

    &__invisible {
        position: absolute;
        padding: 2rem 0;
        left: 0;
        top: -100%; // Faz com que o elemento sobre exatamento do tamanho do outro elemento.
    }

    // Para o background mudar de direção ao passar o mouse
    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    &:hover &__visible {
        transform: translateY(100%); // Faz com que a altura do texto visivel esteja 100% para baixo.
    }

    &:hover &__invisible {
        top: 0; // Isso fará com que o texto invisivel do botão apareça.
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite; // Efeito: PLEASE, CLICK EM MIM! 
    }
}